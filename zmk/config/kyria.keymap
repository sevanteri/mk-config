/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// layers
#define _BASE 0
#define _NAV 1
#define _NUM 2

// finnish keymap
#define FI_AE    SEMI
#define FI_OE    SQT
#define FI_QUOT  BSLH
#define FI_MINUS FSLH

// bluetooth
#define BT_PC BT_SEL 0
#define BT_MOB BT_SEL 1

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
	&kp TAB         &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp FI_QUOT
	&mt LCTRL ESC   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp FI_OE &kp FI_AE
	&kp LSHFT       &kp Z &kp X &kp C &kp V &kp B &none       &none          &none    &none &kp N &kp M  &kp COMMA &kp DOT &kp FI_MINUS &kp RCTRL
	                &mo _NAV &none &kp LGUI &mt LALT SPACE &mt LCTRL BSPC        &lt _NAV RET  &sk LSHFT  &mo _NUM &none &none
			>;
		};

		nav_layer {
			bindings = <
	&bt BT_CLR &out OUT_TOG &kp LC(RIGHT) &trans &trans &trans                                           &trans &trans &trans &trans &trans &trans
	&bt BT_PC &trans &trans &trans &trans &kp HOME                                           &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
	&bt BT_MOB &trans &trans &trans &kp END &kp LC(LEFT) &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
	                     &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
			>;
		};

	};

};

/*

		template_layer {
			bindings = <
	&trans &trans &trans &trans &trans &trans                                           &trans &trans &trans &trans &trans &trans
	&trans &trans &trans &trans &trans &trans                                           &trans &trans &trans &trans &trans &trans
	&trans &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
	                     &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
			>;
		};

*/
